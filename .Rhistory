vacDataN=rowNorm(vacData)
num.pc(vacDataN[cm.genes,])
plierResult=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=24, trace=T, max.iter=5)
show(dim(plierResult$U))
library(PLIER)
data(bloodCellMarkersIRISDMAP)
data(svmMarkers)
data(canonicalPathways)
data(vacData)
allPaths=combinePaths(bloodCellMarkersIRISDMAP, svmMarkers,canonicalPathways)
vacDataN=rowNorm(vacData)
num.pc(vacDataN[cm.genes,])
cm.genes=commonRows(allPaths, vacData)
num.pc(vacDataN[cm.genes,])
plierResult=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=24, trace=T, max.iter=150)
library(PLIER)
\documentclass{article}
\begin{document}
\SweaveOpts{concordance=TRUE}
<<>>=
library(PLIER)
@
\section{Vaccination Dataset}
Load data
<<echo=TRUE>>=
data(bloodCellMarkersIRISDMAP)
data(svmMarkers)
data(canonicalPathways)
data(vacData)
@
Construct a joint pathway matrix by merging canonicalPathways, bloodCellMarkersIRISDMAP and svmMarkers and select genes appearing in both gene expression profile and the joint pathway matrix.
<<echo=TRUE>>=
allPaths=combinePaths(bloodCellMarkersIRISDMAP, svmMarkers,canonicalPathways)
cm.genes=commonRows(allPaths, vacData)
vacDataN=rowNorm(vacData)
num.pc(vacDataN[cm.genes,])
plierResult=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=24, trace=T, max.iter=150)
data(SPVs)
plotMat(cor(t(plierResult$B), SPVs))
plotMat(plierResult$Uauc)
source('~/work/PLIER/R/Allfuncs.R')
plotU(plierResult, auc.cutoff = 0.75, pval.cutoff = 0.01, top = 3)
plierResult$frac
plotU(plierResult, auc.cutoff = 0.6, pval.cutoff = 0.05, top = 3)
plotTopZ(plierResult, vacDataN, allPaths, top = 10)
plierResult$summary[which(plierResult$summary$`LV index`==3),]
plierResult$summary[which(plierResult$summary$`LV index`==3),]
plierResult$summary[which(plierResult$summary$`LV index`==4),]
plotTopZ(plierResult, vacDataN, allPaths, index=c(3,4), top=25)
data(HCCdataTumor)
data(canonicalPathways)
data(chemgenPathways)
data(oncogenicPathways)
CancerPath=combinePaths(canonicalPathways, chemgenPathways, oncogenicPathways)
ii=which(colSums(CancerPath[cmHCC,])<20)
HCCpath=CancerPath[, -ii]
ii=which(colSums(CancerPath[cmHCC,])<20)
cmHCC=commonRows(HCCdataTumor, CancerPath)
ii=which(colSums(CancerPath[cmHCC,])<20)
HCCpath=CancerPath[, -ii]
plierResultK30=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=30, trace=T, max.iter=150)
ii=which(colSums(CancerPath[cmHCC,])<20)
HCCpath=CancerPath[, -ii]
HCCdataN=rowNorm(HCCdataTumor[cmHCC,])
HCCchat=computeChat(CancerPath[cmHCC,])
plotTopZ(plierResult, vacDataN, allPaths, top = 5)
plierResultHCC=PLIER(HCCdataN, CancerPath[cmHCC,], k = 52, Chat = HCCchat, trace=T)
save(plierResult,file="data/plierResult.rda")
save(plierResultHCC,file="data/plierResultHCC.rda")
plotU(plierResultHCC, auc.cutoff = 0.9)
plotU(plierResultHCC, auc.cutoff = 0.9, top=10)
plotU(plierResultHCC, auc.cutoff = 0.85, top=10)
plotU(plierResultHCC, auc.cutoff = 0.85, top=5)
plotTopZ(plierResultHCC, HCCdataN, CancerPath, index=c(26, 40), top = 20)
data("CTNNB1mut")
CTNNB1mut
cor(t(plierResult$B) ,CTNNB1mut, use="p", method = "s")
dim(CTNNB1mut)
length(CTNNB1mut)
cor(t(plierResultHCC$B) ,CTNNB1mut, use="p", method = "s")
cor(t(plierResultHCC$B) ,CTNNB1mut, use="p", method = "s")
dim(plierResultHCC$B)
CTNNB1mut[colnames(HCCdataN)]
sum(!is.na(CTNNB1mut[colnames(HCCdataN)])
)
sum(!is.na(CTNNB1mut[])
)
colnames(HCCdataN)
names(CTNNB1mut)
grep("TCGA",names(CTNNB1mut))
grep("TCGA",names(CTNNB1mut), value=T)
setdiff(grep("TCGA",names(CTNNB1mut), value=T),colnames(dataHCC))
setdiff(grep("TCGA",names(CTNNB1mut), value=T),colnames(HCCdataN))
CTNNB1mut=CTNNB1mut[colnames(HCCdataN)]
cor(t(plierResultHCC$B) ,CTNNB1mut, use="p", method = "s")
sort(cor(t(plierResultHCC$B) ,CTNNB1mut, use="p", method = "s"))
sort(cor(t(plierResultHCC$B) ,CTNNB1mut, use="p", method = "s")[,1])
save(CTNNB1mut,file="data/CTNNB1mut.rda")
load(HCCdataTumor)
data(HCCdataTumor)
dim(HCCdataTumor)
dim(HCCdata)
dim(HCCdataN)
data(HCCdata)
dim(HCCdata)
dim(HCCdataTumor)
setdiff(colnames(HCCdata), colnames(HCCdataTumor))
data("CTNNB1mut")
length(CTNNB1mut)
dim(HCCdata)
dim(HCCdataTumor)
colnames(HCCdataTumor)
CTNNB1mut=CTNNB1mut[colnames(HCCdataN)]
save(CTNNB1mut,file="data/CTNNB1mut.rda")
length(CTNNB1mut)
save(HCCdataTumor,file="data/HCCdata.rda")
data(HCCdata)
data(HCCdata)
dim(HCCdataTumor)
dim(HCCdata)
HCCdata=HCCdataTumor
save(HCCdata,file="data/HCCdata.rda")
plotMat
?pheatmap
pdf("test.pdf")
pheatmap(matrix(rnorm(9), nrow=3))
dev.off()
install.packages("knitr")
library(knitr)
Sweave2knitr(file="inst/
Sweave2knitr(file="inst/doc/vignette.Rnw", output="knitrDoc.Rnw")
1710-61
load("man/bloodCellMarkers.Rd", verbose = T)
load("data/bloodCellMarkers.rda", verbose = T)
colnames(bloodCellMarkers)
load("data/bloodCellMarkersIRISDMAP.rda", verbose = T)
colnames(bloodCellMarkersIRISDMAP)
source('~/work/PLIER/R/Allfuncs.R')
source('~/work/PLIER/R/Allfuncs.R')
install.packages("rsvd")
source('~/work/PLIER/R/Allfuncs.R', echo=TRUE)
source('~/work/PLIER/R/Allfuncs.R')
source('~/work/PLIER/R/Allfuncs.R')
source('~/work/PLIER/R/Allfuncs.R')
# Chunk 1
library(knitr)
opts_chunk$set(
concordance=TRUE
)
# Chunk 2
library(PLIER)
# Chunk 3
data(bloodCellMarkersIRISDMAP)
data(svmMarkers)
data(canonicalPathways)
data(vacData)
# Chunk 4
allPaths=combinePaths(bloodCellMarkersIRISDMAP, svmMarkers,canonicalPathways)
cm.genes=commonRows(allPaths, vacData)
# Chunk 5
vacDataN=rowNorm(vacData)
num.pc(vacDataN[cm.genes,])
#plierResult=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=24, trace=T, max.iter=150)
# Chunk 6
data(plierResult)
# Chunk 7
data(SPVs)
plotMat(cor(t(plierResult$B), SPVs))
# Chunk 8
plotU(plierResult, auc.cutoff = 0.75, pval.cutoff = 0.01, top = 3)
# Chunk 9
plotU(plierResult, auc.cutoff = 0.6, pval.cutoff = 0.05, top = 3)
# Chunk 10
plotTopZ(plierResult, vacDataN, allPaths, top = 5)
# Chunk 11
plierResult$summary[which(plierResult$summary$`LV index`==3),]
plierResult$summary[which(plierResult$summary$`LV index`==4),]
# Chunk 12
plotTopZ(plierResult, vacDataN, allPaths, index=c(3,4), top=25)
# Chunk 13
data(HCCdata)
data(canonicalPathways)
data(chemgenPathways)
data(oncogenicPathways)
# Chunk 14
CancerPath=combinePaths(canonicalPathways, chemgenPathways, oncogenicPathways)
cmHCC=commonRows(HCCdata, CancerPath)
# Chunk 15
ii=which(colSums(CancerPath[cmHCC,])<20)
HCCpath=CancerPath[, -ii]
# Chunk 16
HCCdataN=rowNorm(HCCdata[cmHCC,])
# Chunk 17
HCCchat=computeChat(CancerPath[cmHCC,])
source('~/work/PLIER/R/Allfuncs.R')
plierResult=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=24, trace=T, max.iter=150)
source('~/work/PLIER/R/Allfuncs.R')
plierResult=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=24, trace=T, max.iter=150)
data(SPVs)
plotMat(cor(t(plierResult$B), SPVs))
plotMat(cor(t(plierResult$B), SPVs), scale = F)
plotU(plierResult, auc.cutoff = 0.75, pval.cutoff = 0.01, top = 3)
24*1.3
plierResult=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=36, trace=T, max.iter=150)
plotU(plierResult, auc.cutoff = 0.75, pval.cutoff = 0.01, top = 3)
plotMat(cor(t(plierResult$B), SPVs), scale = F)
plotTopZ(plierResult, vacDataN, allPaths, top = 5)
plotTopZ(plierResult, vacDataN, allPaths, top = 5, c(25,26,30))
plotTopZ(plierResult, vacDataN, allPaths, top = 15, c(25,26,30))
plotTopZ(plierResult, vacDataN, allPaths, top = 15, c(25,26,30,2))
plotU(plierResult, auc.cutoff = 0.6, pval.cutoff = 0.05, top = 3)
plierResult=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=32, trace=T, max.iter=150)
plotU(plierResult, auc.cutoff = 0.6, pval.cutoff = 0.05, top = 3)
plierResult=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=40, trace=T, max.iter=150)
library(GSA)
biocLite("GSA")
source("https://bioconductor.org/biocLite.R")
biocLite("GSA")
library(GSA)
dim(plierResult$U)
plierResult=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=32, trace=T)
plotMat(cor(t(plierResult$B), SPVs), scale = F)
plotU(plierResult, auc.cutoff = 0.75, pval.cutoff = 0.01, top = 3)
plotU(plierResult, auc.cutoff = 0.6, pval.cutoff = 0.05, top = 3)
plotTopZ(plierResult, vacDataN, allPaths, top = 15, c(3,17))
plotTopZ(plierResult, vacDataN, allPaths, top = 15, c(20,28))
plotTopZ(plierResult, vacDataN, allPaths, top = 15, 1:10)
plotTopZ(plierResult, vacDataN, allPaths, top = 15, 1:5)
source('~/work/PLIER/R/Allfuncs.R')
source('~/work/PLIER/R/Allfuncs.R')
plotTopZ(plierResult, vacDataN, allPaths, top = 15, 1:5)
source('~/work/PLIER/R/Allfuncs.R')
plotMat
source('~/work/PLIER/R/Allfuncs.R')
plotMat
source('~/work/PLIER/R/Allfuncs.R')
plotTopZ(plierResult, vacDataN, allPaths, top = 15, 1:5)
source('~/work/PLIER/R/Allfuncs.R')
source('~/work/PLIER/R/Allfuncs.R')
source('~/work/PLIER/R/Allfuncs.R')
plotTopZ(plierResult, vacDataN, allPaths, top = 15, 1:5)
plotTopZ(plierResult, vacDataN, allPaths, top = 15, 1:5)
data(HCCdata)
data(canonicalPathways)
data(chemgenPathways)
data(oncogenicPathways)
CancerPath=combinePaths(canonicalPathways, chemgenPathways, oncogenicPathways)
cmHCC=commonRows(HCCdata, CancerPath)
ii=which(colSums(CancerPath[cmHCC,])<20)
HCCpath=CancerPath[, -ii]
HCCdataN=rowNorm(HCCdata[cmHCC,])
HCCchat=computeChat(CancerPath[cmHCC,])
dim(tmp)
tmp=readPCL("~/work/deepSea/Fantom/mouse_permissive_enhancers_phase_1_and_2_expression_tpm_matrix.txt")
source("~/UsefulRfuncs2.R")
tmp=readPCL("~/work/deepSea/Fantom/mouse_permissive_enhancers_phase_1_and_2_expression_tpm_matrix.txt")
tmp=log2(tmp+1)
save(tmp, "~/work/deepSea/Fantom/mouse_permissive_enhancers_phase_1_and_2_expression_tpm_matrix.RData")
save(tmp, file="~/work/deepSea/Fantom/mouse_permissive_enhancers_phase_1_and_2_expression_tpm_matrix.RData")
colnames(tmp)
tmpn=readPCL("~/work/deepSea/Fantom/Mouse.sample_name2library_id.txt")
tmpn=read.table("~/work/deepSea/Fantom/Mouse.sample_name2library_id.txt", sep='\t', stringsAsFactors = F)
tmpn
tmpn[,1]
tmpn[colnames(tmp),1]
tmpn[1,]
iim=match(colnames(tmp), tmpn[,2])
iim
colnames(tmp)=tmpn[iim,1]
colnames(tmp)
grep("adult",colnames(tmp)_
grep("adult",colnames(tmp))
grep("adult",colnames(tmp), verbose=T)
grep("adult",colnames(tmp), value=T)
grep("embryo",colnames(tmp), value=T)
grep("E12",colnames(tmp), value=T)
ii=c((grep("E12",colnames(tmp), value=T))[-c(1:2)])
ii
ii=c(ii,grep("adult",colnames(tmp), value=T))
ii
tmpsub=tmp[,ii]
tmpsub=cbind(tmpsub, rep(0, nrow(tmpsub))
)
iii=which(rowSums(tmpsub)<1e-9)
length(iii)
dim(tmpsub)
ncol(tmpsub)
colSums(tmpsub)
ncol(tmpsub)
tmpsub[iii,56]=1
colSums(tmpsub)
colnames(tmpsub)
colnames(tmpsub)[56]="Other"
writePCL(tmpsub, "~/work/deepSea/Fantom/mouse_permissive_enhancers_phase_1_and_2_expression_tpm_matrix_selected.txt")
53*1.5
53*1.3
plierResultHCC=PLIER(HCCdataN, CancerPath[cmHCC,], k = 70, Chat = HCCchat, trace=T)
source('~/work/PLIER/R/Allfuncs.R')
source('~/work/PLIER/R/Allfuncs.R')
source('~/work/PLIER/R/Allfuncs.R')
plierResultHCC=PLIER(HCCdataN, CancerPath[cmHCC,], k = 70, Chat = HCCchat, trace=T)
source('~/work/PLIER/R/Allfuncs.R')
plierResultHCC=PLIER(HCCdataN, CancerPath[cmHCC,], k = 70, Chat = HCCchat, trace=T)
plierResult=PLIER(vacDataN[cm.genes,], allPaths[cm.genes,],k=32, trace=T)
save(plierResult, "data/plierResult.rda")
save(plierResult, file="data/plierResult.rda")
install.packages("roxygen2")
source('~/work/PLIER/R/Allfuncs.R')
source('~/work/PLIER/R/Allfuncs.R')
source('~/work/PLIER/R/Allfuncs.R')
